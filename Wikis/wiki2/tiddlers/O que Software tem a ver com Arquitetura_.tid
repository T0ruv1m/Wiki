created: 20241209003222370
modified: 20241209005538016
title: O que Software tem a ver com Arquitetura?
tmap.id: 07a240cf-be55-4ed5-b411-0d70dadbadb7

Os engenheiros de software é ainda um bebê se comparado à Arquitetura. O campo nasceu no século passado, mas no seu curto período de vida ja sofreu com a tentativa de imposição de métodos de trabalho derivados de outras profissões. Eles aprenderam, da forma mais difícil, que o design é um processo dinâmico que exige reajustes constantes, e não uma cascata de decisões e estágios totalmente independentes. Em meio a pressão por resultados e a observada ineficiência dos métodos empregados, tiveram que protestar em busca de melhores condições, um desses protestos resultou no "Manifesto AGILE". Essa lição foi tão profunda que hoje a "Metodologia Ágil" é amplamente aplicada no mercado. Ela se opõe fortemente ao que chamam de "Big Design Upfront" (Grande Planejamento Antecipado). No Manifesto Ágil, eles afirmam o seguinte:

>"Estamos descobrindo melhores maneiras de desenvolver software, fazendo-o nós mesmos e ajudando outros a fazê-lo. Através deste trabalho, passamos a valorizar:

>* Indivíduos e interações mais que processos e ferramentas;
>* Software em funcionamento mais que documentação abrangente;
>* Colaboração com o cliente mais que negociação de contratos;
>* Responder a mudanças mais que seguir um plano.

>Ou seja, embora haja valor nos itens à direita, valorizamos mais os itens à esquerda." (Manifesto Ágil, 2001).

O que muitos não sabem é que os signatários desse manifesto foram fortemente influenciados por [[Christopher Alexander]], incluindo [[Ward Cunningham]] e [[A Gangue dos Quatro]], que são citados nesse trabalho. Essa metodologia se baseia na ideia de [[Crescimento Gradual]], proposta por Alexander, que defende que o design é melhor alcançado por meio de iterações constantes e espaçados ao longo do tempo, ao invés de um planejamento rígido e definido desde o início.

A ideia central à ambos é que, apenas tendo uma concepção inicial do todo e, em seguida, ajustando-a gradualmente, torna-se possível alcançar resultados precisos e satisfatórios. O processo de tentativa e erro revela as condições de melhoria, algo que o design estático não consegue prever adequadamente.

Atualmente, a maior parte do trabalho arquitetônico é realizada por meio de softwares. Isso significa que as ferramentas utilizadas pelos arquitetos foram projetadas por engenheiros de software,e isso acaba determinando grande parte do que somos capazes de fazer e de como pensamos sobre o projetar. Como criadores de nossas ferramentas, os programadores tornam-se, de repente, figuras relevantes para os arquitetos contemporâneos. Considero então interessante explorar as semelhanças e diferenças entre essas profissões.

O mundo do software tem a vantagem de ser virtual, lidando com produtos efêmeros e sem peso físico, os chamados programas. Reformas em programas são mais baratas e não geram resíduos. Tudo o que um programador faz ocorre em um meio tratável, sem decisões "concretas" no sentido literal.

Consequentemente, as ferramentas virtuais de planejamento tentam simular esse ambiente fluido, mas enfrentam um problema: as simulações por computador, por serem tão abstratas e dissociadas do mundo, falham em fornecer tudo o que um arquiteto precisa para trabalhar. Escritores, programadores, designers gráficos ou pintores, ao usar o computador, estão definitivamente mais próximos da "coisa real", ou seja, do meio de seu trabalho. Já o arquiteto age como se fosse apenas mais um elemento nesse conjunto de profissões enqunato, na verdade, nosso trabalho é muito diferente. Ao invés de estarmos em contato direto com o produto criado, trabalhamos em abstrações que informam um passo posterior e distante.

Se reinterpretarmos o arquiteto como alguém que simplesmente produz desenhos no computador, então pode-se dizer que ele está cumprindo seu papel adequadamente. Contudo, se adotarmos a concepção mais ampla de que o arquiteto cria edifícios, torna-se evidente o quão dissociados estamos de nosso verdadeiro trabalho criativo. Com essa mudança de perspectiva, podemos criticar as ferramentas que usamos, compreender por que frequentemente falhamos em entregar bons resultados e buscar formas melhores de trabalhar.

 Uma extensão a esse pensamento está em: [[Crítica ao Design auxiliado por Computadores]]

Christopher Alexander percebeu isso e dedicou grande parte de sua carreira a tentar fazer as pessoas notarem esse problema. Ele buscou encontrar novas formas de trabalho que entregassem resultados confiáveis e de qualidade.

>"A ideia de que podemos chegar a um edifício usando desenhos é uma ficção. Por favor, acreditem, é uma ficção."
(Alexander, disponível em: https://youtu.be/a8wPKso-J4A).

Dica: Uma solução envolve a integração completa das atividades de design, construção e monetização. [[Construção como um Fazer]]

Referências
AGILE Manifesto. Manifesto for Agile Software Development. Disponível em: https://agilemanifesto.org/. Acesso em: 08 dez. 2024.
ALEXANDER, Christopher. The Timeless Way of Building. Oxford University Press, 1979.
ALEXANDER, Christopher. Vídeo: "The idea that we can get to a building using drawings is a fiction". Disponível em: https://youtu.be/a8wPKso-J4A. Acesso em: 08 dez. 2024.